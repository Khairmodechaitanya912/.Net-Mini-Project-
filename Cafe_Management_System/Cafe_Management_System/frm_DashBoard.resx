<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Close.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAABGdBTUEAAOD8YVAtlgAAAvdpQ0NQUGhv
        dG9zaG9wIElDQyBwcm9maWxlAAA4y2NgYJ7g6OLkyiTAwFBQVFLkHuQYGREZpcB+noGNgZkBDBKTiwsc
        AwJ8QOy8/LxUBlTAyMDw7RqIZGC4rAsyi4E0wJoMtBhIHwBio5TU4mQg/QWI08tLCoDijDFAtkhSNphd
        AGJnhwQ5A9ktDAxMPCWpFSC9DM75BZVFmekZJQqGlpaWCo4p+UmpCsGVxSWpucUKnnnJ+UUF+UWJJakp
        QLVQO0CA1yW/RME9MTNPwchAlYHKABSOEBYifBBiCJBcWlQGD0oGBgEGBQYDBgeGAIZEhnqGBQxHGd4w
        ijO6MJYyrmC8xyTGFMQ0gekCszBzJPNC5jcsliwdLLdY9VhbWe+xWbJNY/vGHs6+m0OJo4vjC2ci5wUu
        R64t3JrcC3ikeKbyCvFO4hPmm8Yvw79YQEdgh6Cr4BWhVKEfwr0iKiJ7RcNFv4hNEjcSvyJRISkneUwq
        X1pa+oRMmay67C25PnkX+T8KWxULlfSU3iqvVSlQNVH9qXZQvUsjVFNJ84PWAe1JOqm6VnqCeq/0jxgs
        MKw1ijG2NZE3ZTZ9aXbBfKfFEssJVnXWuTZxtoF2rvbWDsaOOk5qzkouCq7ybgruyh7qnrpeJt42Pu6+
        wX4J/vkB9YETg5YG7wq5GPoynClCLtIqKiK6ImZm7J64BwlsibpJYckNKWtSb6ZzZFhkZmbNzb6Yy55n
        n19RsKnwXbF2SVbpqrI3FfqVJVW7ahhrveqm1j9s1GuqaT7bKtdW2H60U7qrqPt0r2pfY//diTaTZk/+
        OzV+2uEZGjP7Z32fkzD39HzzBUsXiSxuXfJtWebyeytDVp1e47J233rLDds2mWzestVk2/YdVjv373bd
        c3Zf2P4HB3MO/TzSfkz8+IqT1qfOnUk+++v8pIval45eSbz67/qcmza37t6pv6d8/8TDvMdiT/Y/y3wh
        8vLg6/y38u8ufGj6ZPr51dcF38N/Cvw69af1n+P//wANAA8013ReGAAAAAlwSFlzAAAOxAAADsQBlSsO
        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
        7QI/F3SkAAAAAElFTkSuQmCC
</value>
  </data>
</root>